trigger:
  batch: true
  branches:
    include:
    - '*'

  tags:
    include:
      - v*.*
      - prod

stages:
- stage: onPush
  condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  jobs:
  - job: onPushJob
    pool:
      vmImage: 'ubuntu-18.04'

    steps:
    - script: env | sort
      displayName: 'Environment / Context'

    - task: UsePythonVersion@0
      displayName: 'Use Python 3.8'
      inputs:
        versionSpec: 3.8

    - checkout: self
      persistCredentials: true
      clean: true
      displayName: 'Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r unit-requirements.txt
        pip install -e .
      displayName: 'Install dependencies'

    - script: |
        pytest tests/unit --junitxml=test-unit.xml
      displayName: 'Run Unit tests'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-*.xml'
        failTaskOnFailedTests: true


- stage: onRelease
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
  jobs:
  - job: onReleaseJob
    pool:
      vmImage: 'ubuntu-18.04'

    steps:
      - script: env | sort
        displayName: 'Environment / Context'

      - task: UsePythonVersion@0
        displayName: 'Use Python 3.8'
        inputs:
          versionSpec: 3.8

      - checkout: self
        persistCredentials: true
        clean: true
        displayName: 'Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)'

      - script: |
          python -m pip install --upgrade pip
        displayName: 'Install dependencies'

      - script: |
          pip install twine
          pip wheel -w dist .
        displayName: Build package

      - task: TwineAuthenticate@1
        displayName: Twine Authenticate
        inputs:
          artifactFeed: databricks-python-packaging/itrusov-feed

      - script: |
          python -m twine upload -r itrusov-feed --config-file $(PYPIRC_PATH) dist/*.whl
        displayName: Upload to Azure Artifacts